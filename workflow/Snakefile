configfile: "config/config.yaml"
    
rule all:
    input:
        expand('results/{sample}_prediction_results.tsv',
               sample=config["sample_name"])

rule hmmsearch:
    input:
        "{sample_name}.fasta"
    output:
        "results/features/{sample_name}_{db}_dom.tbl",
        "results/features/{sample_name}_{db}_dom.out"
    conda:
        "envs/main_env.yaml"
    params:
        db = "{db}"
    shell:
        "hmmsearch --domtblout {output[0]} resources/{params.db}_dom_hmms.hmm "
        "{input[0]} > {output[1]}"
        
rule adapt_hmm_results:
    input:
        "results/features/{sample_name}_{db}_dom.tbl"
    output:
        "results/features/{sample_name}_{db}_dom_adapted.tbl"
    conda:
        "envs/main_env.yaml"
    shell:
        "python3.7 workflow/scripts/make_out_readable.py --fh_in {input} "
        "--fh_out {output}"

rule treks:
    input:
        "{sample_name}.fasta"
    output:
        "results/features/{sample_name}_treks.tsv",
        "results/features/{sample_name}_treks.aln"
    conda:
        "envs/main_env.yaml"
    log:
        "results/features/{sample_name}_treks.log"
    shell:
        "java -Xmx4G -jar workflow/scripts/T-ReksHPC.jar -f {input} -t "
        "{output[0]} -a {output[1]} -m muscle -s 0.7 -S 5 -L 50 > {log}"

rule inmembrane:
    input:
        "{sample_name}.fasta"
    output:
        "{sample_name}.csv",
        directory("{sample_name}/")
    conda:
        "envs/inmembrane_env.yaml"
    shell:
        "inmembrane_scan {input[0]}"

rule inmembrane_adapt:
    input:
        "{sample_name}.csv"
    output:
        "results/features/{sample_name}_PSE_cellwall.csv"
    conda:
        "envs/main_env.yaml"
    shell:
        "mv {input[0]} {output[0]} | "
        "rm -r {wildcards.sample_name}/"
                
rule hydro_charge:
    input:
        "{sample_name}.fasta"
    output:
        "results/features/{sample_name}_charge_hydro.csv"
    conda:
        "envs/main_env.yaml"
    shell:
        "python3.7 workflow/scripts/hydro_charge_calculat.py --fh_in {input} "
        "--fh_out {output}"

rule iupred:
    input:
        "{sample_name}.fasta"
    output:
        "results/features/{sample_name}_iupred.tab"
    conda:
        "envs/main_env.yaml"
    shell:
        "python3.7 workflow/scripts/iupred2a.py -d workflow/scripts/ {input} "
        "'long' > {output[0]}"


rule iupred_calculate:
    input:
        "results/features/{sample_name}_iupred.tab"
    output:
        "results/features/{sample_name}_iupred_feature.csv"
    conda:
        "envs/main_env.yaml"
    shell:
        "python3.7 workflow/scripts/iupred_feature.py --fh_in {input} "
        "--fh_out {output}"

rule amino_acid_comp:
    input:
        "{sample_name}.fasta"
    output:
        "results/features/{sample_name}_amino_acid_comp.csv"
    conda:
        "envs/main_env.yaml"
    shell:
        "python3.7 workflow/scripts/amino_acid_comp.py --fh_in {input} "
        "--fh_out {output}"

rule combine:
    input:
        "{sample_name}.fasta",
        "results/features/{sample_name}_treks.tsv",
        "results/features/{sample_name}_anchor_dom_adapted.tbl",
        "results/features/{sample_name}_stalk_dom_adapted.tbl",
        "results/features/{sample_name}_adh_dom_adapted.tbl",
        "results/features/{sample_name}_PSE_cellwall.csv",
        "results/features/{sample_name}_iupred_feature.csv",
        "results/features/{sample_name}_charge_hydro.csv",
        "results/features/{sample_name}_amino_acid_comp.csv"
    output:
        "results/features/{sample_name}_all_feature.csv"
    conda:
        "envs/main_env.yaml"
    script:
        "scripts/combine_feature.py"

rule prediction:
    input:
        "resources/training_data.csv",
        "results/features/{sample_name}_all_feature.csv"
    output:
        "results/{sample_name}_prediction_results.tsv"
    conda:
        "envs/main_env.yaml"
    script:
        "scripts/random_forest_prediction.py"
